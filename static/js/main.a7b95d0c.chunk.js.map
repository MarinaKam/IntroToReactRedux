{"version":3,"sources":["09_videos/api/index.js","09_videos/actions/types.js","09_videos/components/List/List.js","09_videos/components/Main/Main.js","09_videos/actions/index.js","09_videos/components/Header/Header.js","09_videos/components/Discover/Discover.js","09_videos/components/MovieItem/MovieItem.js","09_videos/components/App/App.js","serviceWorker.js","09_videos/reducers/movieReducer.js","09_videos/reducers/index.js","index.js"],"names":["axios","create","baseURL","params","api_key","language","include_adult","List","_ref","list","nextPage","react_default","a","createElement","item","map","_ref2","poster_path","id","title","className","key","concat","style","width","src","alt","Link","to","react","type","onClick","Main","e","preventDefault","_this$props","_this","props","section","page","fetchPopularMovies","this","nextProps","movies","components_List_List","Component","connect","state","results","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","get","sent","payload","data","stop","_x","apply","arguments","withRouter","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","exact","activeClassName","fill","height","viewBox","xmlns","d","Discover","fetchDiscoverMovies","_callee2","_context2","_x2","MovieItem","fetchMoviePage","match","movie","backdrop_path","overview","movieBgc","backgroundImage","backgroundRepeat","backgroundPosition","ownProps","_ref3","_callee3","_context3","_x3","App","BrowserRouter","zIndex","position","top","right","left","components_Header_Header","Switch","Route","path","render","components_Discover_Discover","components_Main_Main","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","getMovies","action","_action$payload","oldResults","updatedResults","toConsumableArray","uniqResults","Array","from","Set","JSON","stringify","parse","objectSpread","combineReducers","length","undefined","defineProperty","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","components_App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7b95d0c.chunk.js","sourcesContent":["import axios from 'axios';\nimport { API_KEY } from '../actions/types';\n\nconst URL = 'https://api.themoviedb.org/3';\n\nexport default axios.create({\n    baseURL: URL,\n    params: {\n        api_key: API_KEY,\n        language: \"en-US\",\n        include_adult: false\n    }\n});","export const API_KEY = '70709a51858b93c545a54f1bab03ac65';\nexport const PATH_POPULAR = 'popular';\nexport const PATH_TOP_RATED = 'top_rated';\n// export const PATH_SEARCH = '/search';\nexport const PATH_DISCOVER = 'discover';\nexport const PATH_UPCOMING = 'upcoming';\nexport const DEFAULT_PAGE = 1;\n\n\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\nexport const FETCH_DISCOVER_MOVIES = 'FETCH_DISCOVER_MOVIES';\n","import React, { Fragment } from 'react';\nimport {Link} from 'react-router-dom';\n\nconst List = ({list, nextPage}) => {\n  if (!list) return <div>Loading...</div>;\n  const item = list.map(({poster_path, id, title}) => (\n      <div className=\"card my-2 mx-auto mw-100\" key={`${id}-${title}`} style={{ width: '17rem'}}>\n        { poster_path ? <img src={ `https://image.tmdb.org/t/p/w185_and_h278_bestv2${ poster_path }` }\n                              className=\"card-img-top w-100\"\n                              alt={ title }/> :\n            <div className=\"my-4 text-center text-danger\">Sorry Image Not Found</div>\n        }\n          <div className=\"card-body\">\n            <h6 className=\"card-title\">{title}</h6>\n            <Link to={`/movie/${id}`} className=\"card-link\">Read More</Link>\n          </div>\n      </div>\n  ));\n  return(\n      <Fragment>\n        <div className=\"d-flex flex-wrap justify-content-between align-items-stretch\">\n          {list && item}\n        </div>\n        <div className=\"mx-auto my-3 text-center\">\n          <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={nextPage}\n          >Load More</button>\n        </div>\n      </Fragment>\n  );\n};\n\nexport default List;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPopularMovies } from \"../../actions\";\nimport List from \"../List/List\";\nimport { DEFAULT_PAGE } from \"../../actions/types\";\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchPopularMovies(this.props.section, DEFAULT_PAGE);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.section !== this.props.section){\n            this.props.fetchPopularMovies(nextProps.section, DEFAULT_PAGE);\n        }\n    }\n\n    nextPage = (e) => {\n        e.preventDefault();\n        const { section, page } = this.props;\n        this.props.fetchPopularMovies(section, page + 1);\n    };\n\n    render() {\n        const { movies } = this.props;\n        return (\n            <div className='container-fluid'>\n                <h1>\n                    {this.props.title}\n                </h1>\n                { movies &&\n                    <List list={this.props.movies} nextPage={this.nextPage}/>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n        movies: state.movies.results,\n        page: state.movies.page\n});\n\n\nexport default connect(mapStateToProps, {  fetchPopularMovies })(Main);","import movies from \"../api/index\";\nimport {\n    FETCH_DISCOVER_MOVIES,\n    FETCH_MOVIES,\n    FETCH_MOVIE\n} from './types';\n\n\n\nexport const fetchPopularMovies = (section, page) => async dispatch => {\n    const response = await movies.get(`/movie/${section}?page=${page}`);\n    dispatch({type: FETCH_MOVIES, payload: response.data})\n};\n\nexport const fetchDiscoverMovies = (page) => async dispatch => {\n    const response = await movies.get(`/discover/movie?page=${page}&certification_country=US&certification=R&sort_by=vote_average.desc`);\n    dispatch({type: FETCH_DISCOVER_MOVIES, payload: response.data});\n};\n\nexport const fetchMoviePage = id => async dispatch => {\n    const response = await movies.get(`/movie/${id}?append_to_response=videos,images`);\n    dispatch({ type: FETCH_MOVIE, payload: response.data });\n};\n","import React, { Fragment } from 'react';\nimport { NavLink, Link, withRouter } from 'react-router-dom';\n\nconst Header = () => (\n    <Fragment>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <Link className=\"navbar-brand\" to=\"/\">Films4U</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n                    aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n                <ul className=\"navbar-nav\">\n                    <li className='nav-item'>\n                        <NavLink exact={true} className='nav-link' activeClassName='active' to=\"/\">\n                            <svg className=\"mt-n1\" fill=\"#ffffff\" width=\"16\" height=\"19\" viewBox=\"0 0 16 19\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10.576 3.368L15.122.74 14.79 0 9.066 1.897 7.953 4.473H0v1.983h1.148L2.708 18.6h7.875l1.56-12.144h1.147V4.473H10.1\"/></svg> Discover\n                        </NavLink>\n                    </li>\n                    <li className='nav-item'>\n                        <NavLink exact={true} className='nav-link' activeClassName='active' to=\"/popular\">\n                            <svg className=\"mt-n1\" fill=\"#ffffff\" width=\"13\" height=\"18\" viewBox=\"0 0 13 18\" xmlns=\"http://www.w3.org/2000/svg\"><title>Popular</title><path d=\"M12.464 10.663c-.19-2.486-1.348-4.043-2.37-5.418-.944-1.272-1.76-2.37-1.76-3.992 0-.13-.074-.25-.19-.31-.115-.06-.255-.05-.36.027C6.25 2.068 4.97 3.917 4.524 5.68c-.31 1.23-.35 2.61-.357 3.523C2.75 8.9 2.43 6.783 2.427 6.76c-.016-.11-.083-.206-.18-.26-.1-.05-.215-.054-.315-.004-.074.036-1.823.924-1.925 4.47-.007.12-.007.237-.007.356 0 3.445 2.804 6.25 6.25 6.25H6.268c3.438-.01 6.232-2.81 6.232-6.25 0-.174-.036-.66-.036-.66zM6.25 16.877c-1.15 0-2.083-.996-2.083-2.22 0-.04 0-.083.002-.135.013-.516.11-.868.22-1.102.2.432.56.83 1.145.83.192 0 .347-.155.347-.347 0-.495.01-1.065.134-1.58.11-.456.37-.94.703-1.33.146.504.434.913.714 1.312.402.57.818 1.162.89 2.168.005.06.01.12.01.185 0 1.223-.935 2.22-2.084 2.22z\" /></svg> Popular\n                        </NavLink>\n                    </li>\n                    <li className='nav-item'>\n                        <NavLink  exact={true} className='nav-link' activeClassName='active' to=\"/top-rated\">\n                            <svg className=\"mt-n1\" fill=\"#ffffff\" width=\"15\" height=\"14\" viewBox=\"0 0 15 14\" xmlns=\"http://www.w3.org/2000/svg\"><title>Top Rated</title><path d=\"M14.05 5.947l-2.897 2.825.684 3.99c.05.287-.07.578-.306.75-.132.097-.29.146-.45.146-.12 0-.243-.03-.356-.088L7.14 11.686 3.56 13.57c-.258.136-.57.113-.807-.057-.235-.172-.353-.462-.304-.75l.685-3.99L.233 5.947c-.21-.203-.284-.508-.195-.785.09-.278.33-.48.62-.522l4.005-.582L6.454.428C6.584.164 6.85 0 7.14 0c.293 0 .558.165.688.427l1.792 3.63 4.007.583c.288.042.528.244.617.52.09.28.015.583-.193.787z\" /></svg> Top Rated\n                        </NavLink>\n                    </li>\n                    <li className='nav-item'>\n                        <NavLink exact={true} className='nav-link' activeClassName='active' to=\"/coming-soon\">Coming Soon</NavLink>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n\n    </Fragment>\n);\n\nexport default withRouter(Header);","import React , { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDiscoverMovies } from \"../../actions\";\nimport List from \"../List/List\";\nimport { DEFAULT_PAGE } from \"../../actions/types\";\n\n\nclass Discover extends Component{\n\n    componentDidMount() {\n        this.props.fetchDiscoverMovies(DEFAULT_PAGE);\n    }\n\n    nextPage = (e) => {\n        e.preventDefault();\n        const { page } = this.props;\n        this.props.fetchDiscoverMovies(page + 1);\n    };\n\n    render() {\n        const { movies } = this.props;\n        return (\n            <div className='container-fluid'>\n                <h1>\n                    {this.props.title}\n                </h1>\n                { movies &&\n                    <List list={movies} nextPage={this.nextPage} />\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({ movies: state.movies.results, page: state.movies.page });\n\nexport default connect(mapStateToProps, { fetchDiscoverMovies })(Discover);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMoviePage } from \"../../actions\";\nimport './MovieItem.css';\n\nclass MovieItem extends Component {\n    componentDidMount() {\n        this.props.fetchMoviePage(this.props.match.params.id);\n    }\n    render() {\n        const { movie } = this.props;\n        if(!movie) return <div>Loading...</div>;\n        const {backdrop_path, poster_path, overview, title} = movie;\n        const movieBgc = {\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${backdrop_path})`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \"top center\",\n        };\n\n        return (\n            <Fragment>\n                { backdrop_path &&\n                    <div className=\"movie-bgc\" style={movieBgc}></div>\n                }\n                <div className=\"d-flex flex-lg-row flex-md-column mt-5 pt-5\">\n                    <div className=\"container row justify-content-center mx-auto\">\n                        {poster_path &&\n                        <div className=\"col-lg-4 mx-auto my-3\">\n                            <img src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                                 className=\"img-fluid\"\n                                 alt={title} />\n                        </div>\n                        }\n                        <div className=\"col-lg-6 mt-3\">\n                            <h1>{title}</h1>\n                            <p>{overview}</p>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({ movie: state.movies[ownProps.match.params.id] });\n\nexport default connect(mapStateToProps, { fetchMoviePage })(MovieItem);","import React, { Fragment } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport {PATH_POPULAR, PATH_TOP_RATED, PATH_UPCOMING } from '../../actions/types';\n\nimport Main from \"../Main/Main\";\nimport Header from \"../Header/Header\";\nimport Discover from \"../Discover/Discover\";\nimport MovieItem from \"../MovieItem/MovieItem\";\n\nconst App = () => (\n    <BrowserRouter>\n        <Fragment>\n            <header style={{zIndex: \"101\", position: 'fixed', top: 0, right: 0, left: 0, width: \"100%\"}}>\n                <Header />\n            </header>\n            <section>\n                <Switch>\n                    <Route exact path='/' render={() => <Discover title='Discover' />}/>\n                    <Route exact path='/popular' render={() => <Main title='Popular' section={PATH_POPULAR} />}/>\n                    <Route exact path='/top-rated' render={() => <Main title=\"Top Rated\" section={PATH_TOP_RATED} />}/>\n                    <Route exact path='/coming-soon' render={() => <Main title=\"Coming Soon\" section={PATH_UPCOMING} />}/>\n                    <Route exact path='/movie/:id' component={MovieItem}/>\n                    {/*//        render={props => (*/}\n                    {/*//     <MovieItem {...props} id={props.match.params.id}/>*/}\n                    {/*// ) }/>*/}\n                </Switch>\n            </section>\n        </Fragment>\n    </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    FETCH_MOVIE,\n    FETCH_MOVIES,\n    FETCH_DISCOVER_MOVIES,\n} from '../actions/types';\n\nconst initialState = {\n    page: 1,\n};\n\nconst getMovies = (action, state) => {\n    const { results, page } = action.payload;\n    const oldResults = page !== 1 ? state.results : [];\n    const updatedResults = [\n        ...oldResults,\n        ...results\n    ];\n    const uniqResults = Array.from(new Set(updatedResults.map(JSON.stringify))).map(JSON.parse);\n    return {...state, results: uniqResults, page};\n};\n\nexport default (state=initialState, action) => {\n    switch (action.type) {\n        case FETCH_MOVIE:\n            return {...state, [action.payload.id]: action.payload};\n        case FETCH_MOVIES:\n            return getMovies(action, state);\n        case FETCH_DISCOVER_MOVIES:\n            return getMovies(action, state);\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport movieReducer from \"./movieReducer\";\n\nexport default combineReducers({\n   movies: movieReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport App from './09_videos/components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from \"./09_videos/reducers\";\n//this line for project 07_blog and applyMiddleware for redux\nimport thunk from 'redux-thunk';\n//add redux-form for manage the form state in redux\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n    );\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n"],"sourceRoot":""}